1、每个jdl文件必须包含实体SystemDictionary和关系SystemDictionary{child} to SystemDictionary{parent}，这张表是数据字典的表，不可省略（参照示例jdl文件来写即可）
2、实体以entity开头，关系以relationship开头，关系包括OneToOne和OneToMany两种（ManyToMany请拆分成两个OneToMany关系）
3、实体和字段都可以加注释，格式必须是两个斜杠和N个空白符（例如空格）开头，后面跟注释内容
4、关系里面也可以加注释，格式也是两个斜杠和N个空白符（例如空格）开头，格式是：fromComment{toComment}，其中from表示To前面的，to表示To后面的（例如OneToMany的模型，from表示One一方，to表示many一方），fromComment表示from一方的字段注释，toComment表示to一方的字段注释。（以下类似）
5、关系的表示行的格式是：from一方的类名{to一方的实体名} to to一方的类名{from一方的实体名} ，最终to一方的数据表中会追加以from一方的实体名命名（外加_id）的关联字段（代码级关联，数据库表上不带外键）。如果同一个“from类-to类”在关系中出现多次，那么实体名请命名为不同的名字，避免冲突。
6、实体可以加注解，格式是以//@开头，代码生成完成后，@后面的内容（包括@）会被加到DTO的类注解上。实体的字段也可以加注解，格式同样以//@开头，代码生成完成后，@后面的内容（包括@）会被加到DTO的对应成员变量注解上。如果实体的注解是参数校验，可以按新增和修改的分组区分开，默认都验证。如果只验证新增，则可以加参数groups={ValidateCreateGroup.class}，如果只验证修改，则可以加参数groups={ValidateUpdateGroup.class}
7、实体字段尽量明确标明对应的数据库字段类型，以--column-type方式标注
8、如果某个字段是关联数据字典的，在字段上方加说明，格式是以//#DIC_TYPE:开头，后面加上数据字典类型（示例：//#DIC_TYPE:NATION）
9、多级删除的默认实现是级联删除，如果要改为其他实现，在该关系的上方写上以//!CASCADE_DELETE:开头的标记，后面加上其他实现的方式（目前支持三种：DELETE-默认实现，没有提示，直接级联删除。NULL-级联置空，表示如果删除from表，那么to表中的关联字段对应的值自动置为null。FORBIDDEN-禁止删除，表示如果删除from表，此时发现to表中还有关联的数据，则不允许删除，返回错误提示）


注意：
1、生成器未完善，请自己保证同一个实体内的字段不要重复，自己保证关系模型不要重复（关系模型的重复指from-to关系表中的类名、实体名完全一致）
2、test.jdl中以System开头的实体及关系，是系统管理部分的内容，尽量不要删除，可酌情修改，其他的是某项目的业务部分，按照实际情况填写
3、项目名称最好全部是字母，不要带任何其它字符（没有经过严格测试，所以不保证正确）
4、业务的实体最好统一开头，例如示例中的Sfst，在合理的前提下名字约骚越好，以免与框架自身的部分名称重复