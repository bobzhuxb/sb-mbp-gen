1、每个jdl文件必须包含实体BaseDictionary和关系BaseDictionary{child} to BaseDictionary{parent}，这张表是数据字典的表，不可省略（参照示例jdl文件来写即可）
2、实体以entity开头，关系以relationship开头，关系包括OneToOne和OneToMany两种（ManyToMany请拆分成两个OneToMany关系）
3、实体和字段都可以加注释，格式必须是两个斜杠和N个空白符（例如空格）开头，后面跟注释内容
4、关系里面也可以加注释，格式也是两个斜杠和N个空白符（例如空格）开头，格式是：fromComment{toComment}，其中from表示To前面的，to表示To后面的（例如OneToMany的模型，from表示One一方，to表示many一方），fromComment表示from一方的字段注释，toComment表示to一方的字段注释。（以下类似）
5、关系的表示行的格式是：from一方的类名{to一方的实体名} to to一方的类名{from一方的实体名} ，最终to一方的数据表中会追加以from一方的实体名命名（外加_id）的关联字段（代码级关联，数据库表上不带外键）。如果同一个“from类-to类”在关系中出现多次，那么实体名请命名为不同的名字，避免冲突。
6、实体可以加注解，格式是以//@开头，代码生成完成后，@后面的内容（包括@）会被加到DTO的类注解上。实体的字段也可以加注解，格式同样以//@开头，代码生成完成后，@后面的内容（包括@）会被加到DTO的对应成员变量注解上。
7、如果某个字段是关联数据字典的，在字段上方加说明，格式是以//#DIC_TYPE:开头，后面加上数据字典类型（示例：//#DIC_TYPE:NATION）
8、多级删除的默认实现是级联删除，如果要改为其他实现，在该关系的上方写上以//!CASCADE_DELETE:开头的标记，后面加上其他实现的方式（目前支持三种：DELETE-默认实现，没有提示，直接级联删除。NULL-级联置空，表示如果删除from表，那么to表中的关联字段对应的值自动置为null。FORBIDDEN-禁止删除，表示如果删除from表，此时发现to表中还有关联的数据，则不允许删除，返回错误提示）


注意：
1、生成器未完善，请自己保证同一个实体内的字段不要重复，自己保证关系模型不要重复（关系模型的重复指from-to关系表中的类名、实体名完全一致）
2、system.jdl文件是系统管理部分的内容，如果需要有配置更改或使用（例如更改用户的字段，或者在业务中使用到用户表的情况），把这部分内容一并拷贝到你的jdl文件中，一起生成即可。
3、system.jdl文件中现有的内容不要删除，以免出现错误
4、test.jdl是某项目的业务部分
5、system-test.jdl是把system.jdl和test.jdl合并起来的实体关系结构文件，实际开发时可参照这份文档（或者先写好业务结构文件test.jdl，再把system.jdl相关内容拷贝进来）
4、项目名称最好全部是字母，不要带任何其它字符（没有经过严格测试，所以不保证正确）
5、业务的实体最好统一开头，例如示例中的Sm，在合理的前提下名字约骚越好，以免与框架自身的部分名称重复